// <auto-generated />
using System;
using GPLX.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GPLX.Database.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20211225100440_25122021_1")]
    partial class _25122021_1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GPLX.Database.Models.ActionLogs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FunctionUnique")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("UserId", "CreatedDate", "Action");

                    b.HasIndex("UserName", "CreatedDate", "Action");

                    b.ToTable("ActionLogs");
                });

            modelBuilder.Entity("GPLX.Database.Models.ActuallySpent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Creator")
                        .HasColumnType("int");

                    b.Property<string>("CreatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSub")
                        .HasColumnType("bit");

                    b.Property<int>("ReportForWeek")
                        .HasColumnType("int");

                    b.Property<string>("ReportForWeekName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TotalActualSpentAtTime")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalActuallySpent")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalAmountLeft")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalEstimateCost")
                        .HasColumnType("bigint");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("UnitId", "ReportForWeek", "Id");

                    b.ToTable("ActuallySpent");
                });

            modelBuilder.Entity("GPLX.Database.Models.ActuallySpentItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountantCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ActualPayWeek")
                        .HasColumnType("int");

                    b.Property<string>("ActualPayWeekName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ActualSpent")
                        .HasColumnType("bigint");

                    b.Property<long>("ActualSpentAtTime")
                        .HasColumnType("bigint");

                    b.Property<string>("ActualSpentType")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("AmountLeft")
                        .HasColumnType("bigint");

                    b.Property<long>("Cost")
                        .HasColumnType("bigint");

                    b.Property<string>("CostEstimateGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CostEstimateItemTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CostEstimateItemTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestPayWeek")
                        .HasColumnType("int");

                    b.Property<string>("RequestPayWeekName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("Id", "ActualSpentType", "RequestPayWeek");

                    b.ToTable("ActuallySpentItem");
                });

            modelBuilder.Entity("GPLX.Database.Models.ActuallySpentLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActuallySpentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Creator")
                        .HasColumnType("int");

                    b.Property<string>("CreatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FromStatus")
                        .HasColumnType("int");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<string>("PositionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ToStatus")
                        .HasColumnType("int");

                    b.Property<string>("ToStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("ActuallySpentId", "ToStatus");

                    b.ToTable("ActuallySpentLog");
                });

            modelBuilder.Entity("GPLX.Database.Models.ActuallySpentMapItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActuallySpentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActuallySpentItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Creator")
                        .HasColumnType("int");

                    b.Property<string>("CreatorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("Id", "ActuallySpentId", "ActuallySpentItemId");

                    b.ToTable("ActuallySpentMapItem");
                });

            modelBuilder.Entity("GPLX.Database.Models.CashFollow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CashFollowType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Creator")
                        .HasColumnType("int");

                    b.Property<string>("CreatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSub")
                        .HasColumnType("bit");

                    b.Property<string>("Migrate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathExcel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathPdf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalCirculation")
                        .HasColumnType("float");

                    b.Property<double>("TotalRevenue")
                        .HasColumnType("float");

                    b.Property<double>("TotalSpending")
                        .HasColumnType("float");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("Id");

                    b.HasIndex("UnitId", "Year", "Status");

                    b.ToTable("CashFollow");
                });

            modelBuilder.Entity("GPLX.Database.Models.CashFollowAggregates", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CashFollowGroupId")
                        .HasColumnType("int");

                    b.Property<string>("CashFollowGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CashFollowId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Q1")
                        .HasColumnType("float");

                    b.Property<double>("Q2")
                        .HasColumnType("float");

                    b.Property<double>("Q3")
                        .HasColumnType("float");

                    b.Property<double>("Q4")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("CashFollowId");

                    b.HasIndex("Id");

                    b.ToTable("CashFollowAggregates");
                });

            modelBuilder.Entity("GPLX.Database.Models.CashFollowGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ForSubject")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<string>("RefPaymentId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("ForSubject");

                    b.HasIndex("Id");

                    b.ToTable("CashFollowGroups");
                });

            modelBuilder.Entity("GPLX.Database.Models.CashFollowItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CashFollowGroupId")
                        .HasColumnType("int");

                    b.Property<string>("CashFollowGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CashFollowId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("M1")
                        .HasColumnType("float");

                    b.Property<double>("M10")
                        .HasColumnType("float");

                    b.Property<double>("M11")
                        .HasColumnType("float");

                    b.Property<double>("M12")
                        .HasColumnType("float");

                    b.Property<double>("M2")
                        .HasColumnType("float");

                    b.Property<double>("M3")
                        .HasColumnType("float");

                    b.Property<double>("M4")
                        .HasColumnType("float");

                    b.Property<double>("M5")
                        .HasColumnType("float");

                    b.Property<double>("M6")
                        .HasColumnType("float");

                    b.Property<double>("M7")
                        .HasColumnType("float");

                    b.Property<double>("M8")
                        .HasColumnType("float");

                    b.Property<double>("M9")
                        .HasColumnType("float");

                    b.Property<string>("Migrate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("CashFollowId");

                    b.HasIndex("Id");

                    b.ToTable("CashFollowItem");
                });

            modelBuilder.Entity("GPLX.Database.Models.CashFollowLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CashFollowId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Creator")
                        .HasColumnType("int");

                    b.Property<string>("CreatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FromStatus")
                        .HasColumnType("int");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<string>("PositionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ToStatus")
                        .HasColumnType("int");

                    b.Property<string>("ToStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CashFollowId");

                    b.ToTable("CashFollowLog");
                });

            modelBuilder.Entity("GPLX.Database.Models.CostEstimate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<long?>("AccountBalance")
                        .HasColumnType("bigint");

                    b.Property<long?>("BeginAvailableBalance")
                        .HasColumnType("bigint");

                    b.Property<string>("CostEstimateBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CostEstimateType")
                        .HasColumnType("int");

                    b.Property<string>("CostEstimateTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EndAvailableBalance")
                        .HasColumnType("bigint");

                    b.Property<long?>("EquityCost")
                        .HasColumnType("bigint");

                    b.Property<long?>("EstimatedCost")
                        .HasColumnType("bigint");

                    b.Property<string>("ExcelFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ExpectRevenue")
                        .HasColumnType("bigint");

                    b.Property<long?>("FinancialCost")
                        .HasColumnType("bigint");

                    b.Property<long?>("Funds")
                        .HasColumnType("bigint");

                    b.Property<long?>("InvestmentCost")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsSub")
                        .HasColumnType("bit");

                    b.Property<long?>("NonRoutineCost")
                        .HasColumnType("bigint");

                    b.Property<long?>("OperatingCost")
                        .HasColumnType("bigint");

                    b.Property<string>("PdfFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PlanCutCost")
                        .HasColumnType("bigint");

                    b.Property<int>("ReportForWeek")
                        .HasColumnType("int");

                    b.Property<string>("ReportForWeekName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RotationProposal")
                        .HasColumnType("bigint");

                    b.Property<long?>("RoutineCost")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TotalExpenditureCapital")
                        .HasColumnType("bigint");

                    b.Property<long?>("TotalSpendingLoan")
                        .HasColumnType("bigint");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdaterId")
                        .HasColumnType("int");

                    b.Property<string>("UpdaterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("WorkingBalanceCost")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("UserId", "Status", "CreatedDate");

                    b.HasIndex("UserId", "Status", "CreatedDate", "DepartmentId");

                    b.ToTable("CostEstimate");
                });

            modelBuilder.Entity("GPLX.Database.Models.CostEstimateItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("AccountImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("BillCost")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("BillDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Cost")
                        .HasColumnType("bigint");

                    b.Property<string>("CostEstimateGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CostEstimateItemTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CostEstimateItemTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CostEstimatePaymentType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("CreatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstimateType")
                        .HasColumnType("int");

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsLock")
                        .HasColumnType("int");

                    b.Property<bool>("IsSub")
                        .HasColumnType("bit");

                    b.Property<string>("PayForm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PayWeek")
                        .HasColumnType("int");

                    b.Property<string>("PayWeekName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RequestContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestContentNonUnicode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequesterId")
                        .HasColumnType("int");

                    b.Property<string>("RequesterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("RequestCode")
                        .IsUnique()
                        .HasFilter("[RequestCode] IS NOT NULL");

                    b.HasIndex("CreatorId", "Status");

                    b.ToTable("CostEstimateItem");
                });

            modelBuilder.Entity("GPLX.Database.Models.CostEstimateItemLogs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("CostEstimateItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FromStatus")
                        .HasColumnType("int");

                    b.Property<int>("FromStatusName")
                        .HasColumnType("int");

                    b.Property<string>("LogType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<string>("PositionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ToStatus")
                        .HasColumnType("int");

                    b.Property<string>("ToStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("UserId", "CreatedDate");

                    b.ToTable("CostEstimateItemLogs");
                });

            modelBuilder.Entity("GPLX.Database.Models.CostEstimateItemMapActuallySpentItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActuallySpentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActuallySpentItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CostEstimateItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RequestCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("ActuallySpentItemId", "CostEstimateItemId");

                    b.HasIndex("Status", "CostEstimateItemId", "ActuallySpentItemId");

                    b.ToTable("CostEstimateItemMapActuallySpentItem");
                });

            modelBuilder.Entity("GPLX.Database.Models.CostEstimateItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComparingType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForUnitType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .IsClustered();

                    b.ToTable("CostEstimateItemType");
                });

            modelBuilder.Entity("GPLX.Database.Models.CostEstimateLogs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("CostEstimateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FromStatus")
                        .HasColumnType("int");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<string>("PositionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ToStatus")
                        .HasColumnType("int");

                    b.Property<string>("ToStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("UserId", "CreatedDate");

                    b.ToTable("CostEstimateLogs");
                });

            modelBuilder.Entity("GPLX.Database.Models.CostEstimateMapItems", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CostEstimateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CostEstimateItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("CreatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("RequestCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("CostEstimateId", "CostEstimateItemId", "Status");

                    b.ToTable("CostEstimateMapItems");
                });

            modelBuilder.Entity("GPLX.Database.Models.CostStatuses", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IsApprove")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<bool>("Singed")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusForCostEstimateType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusForSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("Type", "Status");

                    b.ToTable("CostStatuses");
                });

            modelBuilder.Entity("GPLX.Database.Models.CostStatusesGroups", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GroupCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("StatusesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("GroupCode");

                    b.HasIndex("GroupCode", "StatusesId");

                    b.ToTable("CostStatusesGroups");
                });

            modelBuilder.Entity("GPLX.Database.Models.Departments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Creator")
                        .HasColumnType("int");

                    b.Property<string>("CreatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("GPLX.Database.Models.FilePdfCreateLogs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("Id");

                    b.HasIndex("UnitId", "Type");

                    b.ToTable("FilePdfCreateLogs");
                });

            modelBuilder.Entity("GPLX.Database.Models.Functions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DisplayOnMenu")
                        .HasColumnType("int");

                    b.Property<string>("IconClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Unique")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .IsClustered();

                    b.ToTable("Functions");
                });

            modelBuilder.Entity("GPLX.Database.Models.Groups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Creator")
                        .HasColumnType("int");

                    b.Property<string>("CreatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("GroupCode")
                        .IsUnique()
                        .HasFilter("[GroupCode] IS NOT NULL");

                    b.HasIndex("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("GPLX.Database.Models.GroupsPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FunctionId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("Permission")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("GroupId");

                    b.ToTable("GroupsPermission");
                });

            modelBuilder.Entity("GPLX.Database.Models.InvestmentPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Creator")
                        .HasColumnType("int");

                    b.Property<string>("CreatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSub")
                        .HasColumnType("bit");

                    b.Property<string>("PathExcel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathPdf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalCapitalMedGroup")
                        .HasColumnType("float");

                    b.Property<double>("TotalExpectCostInvestment")
                        .HasColumnType("float");

                    b.Property<double>("TotalExpenditureCapital")
                        .HasColumnType("float");

                    b.Property<double>("TotalSpendingLoan")
                        .HasColumnType("float");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Id", "Status", "UnitId");

                    b.ToTable("InvestmentPlan");
                });

            modelBuilder.Entity("GPLX.Database.Models.InvestmentPlanAggregate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("CapitalMedGroup")
                        .HasColumnType("float");

                    b.Property<string>("CapitalPlanAggregate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ExpectCostInvestment")
                        .HasColumnType("float");

                    b.Property<double>("ExpenditureCapital")
                        .HasColumnType("float");

                    b.Property<int>("InvestmentPlanContentId")
                        .HasColumnType("int");

                    b.Property<string>("InvestmentPlanContentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InvestmentPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("SpendingLoan")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Id", "InvestmentPlanId");

                    b.ToTable("InvestmentPlanAggregate");
                });

            modelBuilder.Entity("GPLX.Database.Models.InvestmentPlanContents", b =>
                {
                    b.Property<int>("InvestmentPlanContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ForSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvestmentPlanContentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("InvestmentPlanContentId")
                        .IsClustered();

                    b.HasIndex("InvestmentPlanContentId")
                        .IsUnique();

                    b.ToTable("InvestmentPlanContents");
                });

            modelBuilder.Entity("GPLX.Database.Models.InvestmentPlanDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CapitalPlanId")
                        .HasColumnType("int");

                    b.Property<string>("CapitalPlanName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CostExpected")
                        .HasColumnType("float");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpectedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvestContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvestmentPlanContentId")
                        .HasColumnType("int");

                    b.Property<string>("InvestmentPlanContentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InvestmentPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("SpendingLoan")
                        .HasColumnType("float");

                    b.Property<double>("SpendingLoanPercent")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Id", "InvestmentPlanId");

                    b.ToTable("InvestmentPlanDetails");
                });

            modelBuilder.Entity("GPLX.Database.Models.InvestmentPlanLogs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Creator")
                        .HasColumnType("int");

                    b.Property<string>("CreatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FromStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("InvestmentPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<string>("PositionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ToStatus")
                        .HasColumnType("int");

                    b.Property<string>("ToStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Id", "InvestmentPlanId");

                    b.ToTable("InvestmentPlanLogs");
                });

            modelBuilder.Entity("GPLX.Database.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComparingType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("GPLX.Database.Models.ProfitPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Creator")
                        .HasColumnType("int");

                    b.Property<string>("CreatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSub")
                        .HasColumnType("bit");

                    b.Property<string>("PathExcel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathPdf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfitPlanType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProportionExpense")
                        .HasColumnType("float");

                    b.Property<double>("ProportionProfitTax")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalExpense")
                        .HasColumnType("float");

                    b.Property<double>("TotalProfitTax")
                        .HasColumnType("float");

                    b.Property<double>("TotalRevenue")
                        .HasColumnType("float");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("UnitId", "Status", "IsSub");

                    b.ToTable("ProfitPlan");
                });

            modelBuilder.Entity("GPLX.Database.Models.ProfitPlanAggregates", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProfitPlanGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ProfitPlanGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProfitPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Proportion")
                        .HasColumnType("float");

                    b.Property<double>("TotalCosh")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ProfitPlanId");

                    b.ToTable("ProfitPlanAggregates");
                });

            modelBuilder.Entity("GPLX.Database.Models.ProfitPlanDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("M1")
                        .HasColumnType("float");

                    b.Property<double>("M10")
                        .HasColumnType("float");

                    b.Property<double>("M11")
                        .HasColumnType("float");

                    b.Property<double>("M12")
                        .HasColumnType("float");

                    b.Property<double>("M2")
                        .HasColumnType("float");

                    b.Property<double>("M3")
                        .HasColumnType("float");

                    b.Property<double>("M4")
                        .HasColumnType("float");

                    b.Property<double>("M5")
                        .HasColumnType("float");

                    b.Property<double>("M6")
                        .HasColumnType("float");

                    b.Property<double>("M7")
                        .HasColumnType("float");

                    b.Property<double>("M8")
                        .HasColumnType("float");

                    b.Property<double>("M9")
                        .HasColumnType("float");

                    b.Property<float>("ProPortion")
                        .HasColumnType("real");

                    b.Property<int>("ProfitPlanGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ProfitPlanGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProfitPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("ProfitPlanId");

                    b.ToTable("ProfitPlanDetails");
                });

            modelBuilder.Entity("GPLX.Database.Models.ProfitPlanGroups", b =>
                {
                    b.Property<int>("ProfitPlanGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ForSubject")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("ProfitPlanGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfitPlanParentGroupId")
                        .HasColumnType("int");

                    b.HasKey("ProfitPlanGroupId")
                        .IsClustered();

                    b.HasIndex("ForSubject");

                    b.HasIndex("ProfitPlanGroupId")
                        .IsUnique();

                    b.ToTable("ProfitPlanGroups");
                });

            modelBuilder.Entity("GPLX.Database.Models.ProfitPlanLogs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Creator")
                        .HasColumnType("int");

                    b.Property<string>("CreatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FromStatus")
                        .HasColumnType("int");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<string>("PositionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProfitPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ToStatus")
                        .HasColumnType("int");

                    b.Property<string>("ToStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("ProfitPlanId");

                    b.ToTable("ProfitPlanLogs");
                });

            modelBuilder.Entity("GPLX.Database.Models.RevenuePlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Creator")
                        .HasColumnType("int");

                    b.Property<string>("CreatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSub")
                        .HasColumnType("bit");

                    b.Property<string>("PathExcel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathPdf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RevenuePlanType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Id", "UnitId", "Status");

                    b.ToTable("RevenuePlan");
                });

            modelBuilder.Entity("GPLX.Database.Models.RevenuePlanAggregate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("ExpectRevenue")
                        .HasColumnType("float");

                    b.Property<double>("NumberCustomers")
                        .HasColumnType("float");

                    b.Property<double>("ProportionCustomer")
                        .HasColumnType("float");

                    b.Property<double>("ProportionRevenue")
                        .HasColumnType("float");

                    b.Property<string>("RevenuePlanContentContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RevenuePlanContentId")
                        .HasColumnType("int");

                    b.Property<Guid>("RevenuePlanId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("RevenuePlanContentId");

                    b.ToTable("RevenuePlanAggregate");
                });

            modelBuilder.Entity("GPLX.Database.Models.RevenuePlanCashDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("M1")
                        .HasColumnType("float");

                    b.Property<double>("M10")
                        .HasColumnType("float");

                    b.Property<double>("M11")
                        .HasColumnType("float");

                    b.Property<double>("M12")
                        .HasColumnType("float");

                    b.Property<double>("M2")
                        .HasColumnType("float");

                    b.Property<double>("M3")
                        .HasColumnType("float");

                    b.Property<double>("M4")
                        .HasColumnType("float");

                    b.Property<double>("M5")
                        .HasColumnType("float");

                    b.Property<double>("M6")
                        .HasColumnType("float");

                    b.Property<double>("M7")
                        .HasColumnType("float");

                    b.Property<double>("M8")
                        .HasColumnType("float");

                    b.Property<double>("M9")
                        .HasColumnType("float");

                    b.Property<float>("ProPortion")
                        .HasColumnType("real");

                    b.Property<int>("RevenuePlanContentId")
                        .HasColumnType("int");

                    b.Property<string>("RevenuePlanContentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RevenuePlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("RevenuePlanId");

                    b.ToTable("RevenuePlanCashDetails");
                });

            modelBuilder.Entity("GPLX.Database.Models.RevenuePlanContents", b =>
                {
                    b.Property<int>("RevenuePlanContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("RevenuePlanContentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RevenuePlanContentId")
                        .IsClustered();

                    b.HasIndex("RevenuePlanContentId")
                        .IsUnique();

                    b.ToTable("RevenuePlanContents");
                });

            modelBuilder.Entity("GPLX.Database.Models.RevenuePlanCustomerDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("M1")
                        .HasColumnType("float");

                    b.Property<double>("M10")
                        .HasColumnType("float");

                    b.Property<double>("M11")
                        .HasColumnType("float");

                    b.Property<double>("M12")
                        .HasColumnType("float");

                    b.Property<double>("M2")
                        .HasColumnType("float");

                    b.Property<double>("M3")
                        .HasColumnType("float");

                    b.Property<double>("M4")
                        .HasColumnType("float");

                    b.Property<double>("M5")
                        .HasColumnType("float");

                    b.Property<double>("M6")
                        .HasColumnType("float");

                    b.Property<double>("M7")
                        .HasColumnType("float");

                    b.Property<double>("M8")
                        .HasColumnType("float");

                    b.Property<double>("M9")
                        .HasColumnType("float");

                    b.Property<float>("ProPortion")
                        .HasColumnType("real");

                    b.Property<int>("RevenuePlanContentId")
                        .HasColumnType("int");

                    b.Property<string>("RevenuePlanContentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RevenuePlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("RevenuePlanId");

                    b.ToTable("RevenuePlanCustomerDetails");
                });

            modelBuilder.Entity("GPLX.Database.Models.RevenuePlanLogs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Creator")
                        .HasColumnType("int");

                    b.Property<string>("CreatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FromStatus")
                        .HasColumnType("int");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<string>("PositionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RevenuePlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ToStatus")
                        .HasColumnType("int");

                    b.Property<string>("ToStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("RevenuePlanId");

                    b.HasIndex("RevenuePlanId", "FromStatus");

                    b.ToTable("RevenuePlanLogs");
                });

            modelBuilder.Entity("GPLX.Database.Models.SctData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccountReciprocalNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("ActuallySpentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BillCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Day")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IncurredDebt")
                        .HasColumnType("bigint");

                    b.Property<long?>("IncurredHave")
                        .HasColumnType("bigint");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long?>("SurplusDebt")
                        .HasColumnType("bigint");

                    b.Property<long?>("SurplusHave")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Uploader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("Type", "Status");

                    b.ToTable("SctData");
                });

            modelBuilder.Entity("GPLX.Database.Models.Suppliers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("SupplierName");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("GPLX.Database.Models.UnitTypeMap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("Id");

                    b.HasIndex("UnitCode")
                        .IsUnique()
                        .HasFilter("[UnitCode] IS NOT NULL");

                    b.ToTable("UnitTypeMaps");
                });

            modelBuilder.Entity("GPLX.Database.Models.Units", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Createby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Createdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OfficesAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficesCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficesContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficesDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficesGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficesName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("OfficesOrder")
                        .HasColumnType("int");

                    b.Property<string>("OfficesShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficesSub")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfficesType")
                        .HasColumnType("int");

                    b.Property<string>("OfficesTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParrentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TenantID")
                        .HasColumnType("int");

                    b.Property<string>("TenantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Updateby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updatedate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("Id");

                    b.HasIndex("OfficesName");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("GPLX.Database.Models.UserConcurrently", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GroupCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("Selected")
                        .HasColumnType("bit");

                    b.Property<string>("UnitCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.HasIndex("UnitId", "UnitCode");

                    b.HasIndex("UserId", "GroupCode");

                    b.ToTable("UserConcurrently");
                });

            modelBuilder.Entity("GPLX.Database.Models.UserGroups", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("UserId");

                    b.HasIndex("UserId", "GroupId");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("GPLX.Database.Models.UserUnitsManages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OfficeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("OfficeCode", "UserId");

                    b.ToTable("UserUnitsManages");
                });

            modelBuilder.Entity("GPLX.Database.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccDigitalSignature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Createby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DigitalSignature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordDigitalSignature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathSignature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserPhone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("Id");

                    b.HasIndex("UserName");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
